{
  "name": "ReverseString",
  "title": "Reverse a String",
  "description": "Reverse a String Exercise Implementation\nDESCRIPTION:\nReverses a given string, returning the characters in opposite order.\nEXAMPLE:\n\"hello\" → \"olleh\"\n\"12345\" → \"54321\"\nCONCEPTS:\n- String manipulation\n- Array methods\n- Iteration\nPERFORMANCE:\n- Time: O(n) - single pass to reverse\n- Space: O(n) - stores new string/array\nMultiple implementations included to show different approaches.",
  "code": "export function reverseString(str: string): string {\n  return str.split('').reverse().join('');\n}\n\n// Alternative implementation (manual loop)\n",
  "rawContent": "import { ExerciseMetadata, ExampleCase } from '@interfaces/exercises';\n\n/**\n * Reverse a String Exercise Implementation\n * \n * DESCRIPTION:\n * Reverses a given string, returning the characters in opposite order.\n * \n * EXAMPLE:\n * \"hello\" → \"olleh\"\n * \"12345\" → \"54321\"\n * \n * CONCEPTS:\n * - String manipulation\n * - Array methods\n * - Iteration\n * \n * PERFORMANCE:\n * - Time: O(n) - single pass to reverse\n * - Space: O(n) - stores new string/array\n * \n * Multiple implementations included to show different approaches.\n */\n\n// Main function (built-in methods)\nexport function reverseString(str: string): string {\n  return str.split('').reverse().join('');\n}\n\n// Alternative implementation (manual loop)\nexport function reverseStringManual(str: string): string {\n  let result = '';\n  for (let i = str.length - 1; i >= 0; i--) {\n    result += str[i];\n  }\n  return result;\n}\n\n// Exercise metadata\nexport const metadata: ExerciseMetadata = {\n  title: \"Reverse a String\",\n  description: \"Reverses a given string, returning the characters in opposite order\",\n  concepts: [\"string manipulation\", \"array methods\", \"iteration\"],\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(n)\"\n};\n\n// Example test cases\nexport const examples: ExampleCase[] = [\n  {\n    input: \"hello\",\n    output: \"olleh\",\n    description: \"Basic string reversal\"\n  },\n  {\n    input: \"\",\n    output: \"\",\n    description: \"Empty string\"\n  },\n  {\n    input: \"a\",\n    output: \"a\",\n    description: \"Single character\"\n  },\n  {\n    input: \"12345!\",\n    output: \"!54321\",\n    description: \"String with numbers and special characters\"\n  },\n  {\n    input: \"héllo\",\n    output: \"ollèh\",\n    description: \"String with Unicode characters\"\n  }\n];\n\n// Default export for easy importing\nexport default {\n  reverseString,\n  reverseStringManual,\n  metadata,\n  examples\n};",
  "metadata": "export const metadata: ExerciseMetadata = {\n  title: \"Reverse a String\",\n  description: \"Reverses a given string, returning the characters in opposite order\",\n  concepts: [\"string manipulation\", \"array methods\", \"iteration\"],\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(n)\"\n};",
  "examples": "export const examples: ExampleCase[] = [\n  {\n    input: \"hello\",\n    output: \"olleh\",\n    description: \"Basic string reversal\"\n  },\n  {\n    input: \"\",\n    output: \"\",\n    description: \"Empty string\"\n  },\n  {\n    input: \"a\",\n    output: \"a\",\n    description: \"Single character\"\n  },\n  {\n    input: \"12345!\",\n    output: \"!54321\",\n    description: \"String with numbers and special characters\"\n  },\n  {\n    input: \"héllo\",\n    output: \"ollèh\",\n    description: \"String with Unicode characters\"\n  }\n];",
  "generatedAt": "2025-06-26T23:54:56.399Z"
}